name: Build Docker Image, Generate SBOM, Run Semgrep, and Scan for Secrets

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-sbom:
    runs-on: ubuntu-latest

    steps:
      # 1. Reposunu çek
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Docker için Buildx ortamını kur
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Docker image'ı build et (push yapmadan)
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: juice-shop:latest

      # 4. Syft'ı kur
      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      # 5. SBOM dosyasını oluştur
      - name: Generate SBOM with Syft
        run: |
          mkdir -p reports/sbom
          syft juice-shop:latest -o spdx-json > reports/sbom/sbom.spdx.json

      # 6. SBOM dosyasını artefakt olarak kaydet
      - name: Upload SBOM as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: juice-shop-sbom
          path: reports/sbom/sbom.spdx.json

  semgrep-scan:
    runs-on: ubuntu-latest

    steps:
      # 1. Reposunu tekrar çek
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Semgrep'i kur
      - name: Install Semgrep
        run: |
          python -m pip install --upgrade pip
          pip install semgrep

      # 3. Semgrep taraması yap ve SARIF formatında çıktı al
      - name: Run Semgrep scan and output in SARIF format
        run: |
          mkdir -p reports/semgrep
          semgrep --config=auto --sarif --output=reports/semgrep/semgrep-results.sarif

      # 4. Semgrep sonuçlarını SARIF formatında artefakt olarak kaydet
      - name: Upload Semgrep SARIF Results as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-sarif-results
          path: reports/semgrep/semgrep-results.sarif

  gitleaks-scan:
    runs-on: ubuntu-latest

    steps:
      # 1. Reposunu tekrar çek
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Gitleaks ile gizli bilgi taraması yap
      - name: Run Gitleaks scan
        uses: gitleaks/gitleaks-action@v2
        continue-on-error: true     # <<< BURASI: hata olsa da devam et
        with:
          scan-dir: .
          fail: true                # <<< Leak bulursa exit 1 ver, ama hata pipeline'ı durdurmasın
          report-format: sarif
          report-path: reports/gitleaks/gitleaks-results.sarif

      # 3. Gitleaks sonuçlarını SARIF formatında artefakt olarak kaydet
      - name: Upload Gitleaks SARIF Results as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-sarif-results
          path: reports/gitleaks/gitleaks-results.sarif
