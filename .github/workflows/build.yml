name: Build Docker Image, Generate SBOM, Run Semgrep, Scan for Secrets, Run ZAP DAST, and Dummy Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-sbom:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: juice-shop:latest

      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Generate SBOM with Syft
        run: |
          mkdir -p reports/sbom
          syft juice-shop:latest -o spdx-json > reports/sbom/sbom.spdx.json

      - name: Upload SBOM as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: juice-shop-sbom
          path: reports/sbom/sbom.spdx.json

  semgrep-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Semgrep
        run: |
          python -m pip install --upgrade pip
          pip install semgrep

      - name: Run Semgrep scan and output in SARIF format
        run: |
          mkdir -p reports/semgrep
          semgrep --config=auto --sarif --output=reports/semgrep/semgrep-results.sarif

      - name: Upload Semgrep SARIF Results as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-sarif-results
          path: reports/semgrep/semgrep-results.sarif

  gitleaks-scan:
    runs-on: ubuntu-latest
    needs: semgrep-scan

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Gitleaks scan
        uses: gitleaks/gitleaks-action@v2
        env:
          GITLEAKS_ARTIFACT_UPLOAD: true
          GITLEAKS_ARTIFACT_SUMMARY: true
        continue-on-error: true
        with:
          scan-dir: .
          fail: true
          report-format: sarif
          report-path: reports/gitleaks/gitleaks-results.sarif

      - name: Upload Gitleaks SARIF Results as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-sarif-results
          path: reports/gitleaks/gitleaks-results.sarif

  zap-scan:
    runs-on: ubuntu-latest
    needs: gitleaks-scan

    steps:
      - name: Run OWASP ZAP DAST Scan
        run: |
          mkdir -p reports/zap
          docker run --rm -v $(pwd)/reports/zap:/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t https://example.com \
            -r zap-report.html

      - name: Upload ZAP Scan Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-scan-report
          path: reports/zap/zap-report.html

  dummy-deploy:
    runs-on: ubuntu-latest
    needs: zap-scan

    steps:
      - name: Dummy Deploy Step
        run: |
          echo "ðŸš€ Starting dummy deploy step..."
          echo "Deploying juice-shop application to dummy environment."
          sleep 2
          echo "âœ… Dummy deploy completed successfully!"
